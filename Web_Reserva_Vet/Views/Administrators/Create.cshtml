@model Web_Vet_Pet.Models.Administrator

@{
    ViewData["Title"] = "Asignar Nuevo Administrador"; // Título más descriptivo para la página
}

<h1>@ViewData["Title"]</h1>

<h4>Seleccione un usuario para asignarle el rol de Administrador</h4>
<hr />
<div class="row">
    <div class="col-md-6">
        @* Un ancho de columna común para formularios *@
        <form asp-action="Create" method="post">
            @* Es buena práctica incluir method="post" explícitamente *@
            @* Muestra un resumen de los errores de validación del modelo, si los hay *@
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group mb-3">
                @* mb-3 añade un margen inferior si usas Bootstrap *@
                <label asp-for="UserId" class="control-label">Usuario a Designar como Administrador</label> @* Texto claro para la etiqueta *@

                @* Este select se enlaza con la propiedad "UserId" de tu modelo "Administrator".
                    Los ítems (opciones) vienen de ViewData["UserId"], que fue preparado en tu controlador
                    con la lista de usuarios elegibles.
                *@
                <select asp-for="UserId" class="form-control" asp-items="@(ViewData["UserId"] as SelectList)">
                    <option value="">-- Seleccione un Usuario --</option> @* Opción por defecto para asegurar una selección *@
                </select>

                @* Muestra errores de validación específicos para el campo UserId (si es requerido, por ejemplo) *@
                <span asp-validation-for="UserId" class="text-danger"></span>
            </div>

            @* El campo "Id" de la tabla "Administrator" generalmente es una clave primaria autoincremental
                generada por la base de datos. Por lo tanto, no se incluye en el formulario de CREACIÓN.
                El atributo [Bind("Id,UserId")] en tu método POST del controlador se encarga de qué propiedades aceptar.
                Para la creación, solo UserId es relevante desde el formulario.
            *@

            <div class="form-group mt-2">
                @* mt-2 añade un pequeño margen superior si usas Bootstrap *@
                <input type="submit" value="Asignar Rol de Administrador" class="btn btn-primary" />
                <a asp-action="Index" class="btn btn-outline-secondary">Volver a la Lista</a> @* Estilo secundario para el botón de volver *@
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        // Esto incluye los scripts necesarios para la validación del lado del cliente de ASP.NET Core MVC,
        // como verificar campos requeridos antes de enviar el formulario.
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}